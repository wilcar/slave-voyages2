[
["chronologies.html", "Chapitre4 Chronologies 4.1 Préalables 4.2 Chronologie globale de la traite 4.3 Chronologies comparatives de la traite 4.4 Exemples", " Chapitre4 Chronologies Une série temporelle ou chronologique (nous utiliserons les deux termes indifféremment) correspond à une série d’observations réalisées au cours du temps. 4.1 Préalables 4.1.1 Packages 4.1.2 Thème personnalisé gpglot2 Les graphiques construits avec le package ggplot2 ont en commun un thème appelé my_theme_chrono1 défini à l’aide d’une fonction. my_theme_chrono1 &lt;- function() {theme(plot.caption =element_text(colour = &quot;grey25&quot;), plot.subtitle = element_text(colour = &quot;grey25&quot;), axis.line.y = element_blank(), panel.background = element_blank(), panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank(), panel.grid.major.y = element_line( size=.1, color=&quot;grey&quot;, linetype = &quot;dashed&quot;), axis.ticks.y = element_blank(), axis.text.y.left = element_text(vjust = -0.9), axis.line.x = element_blank())} 4.1.2.1 Tidyverse dplyr : grammaire de manipulation des tableaux de données. stringr : manipulation de chaînes de caractères. ggplot2 :graphiques avancés. 4.1.2.2 Autres packages ggpmisc, ggrepel, gganimate : extensions du package ggplot2. zoo :package utilisée dans le calcul des moyennes mobiles. 4.1.2.3 Appel des packages La fonction library permet de charger un package et de rendre ses fonctionnalités disponibles. Elle doit être exécutée à chaque session. library(tidyverse) library(ggpmisc) library(ggrepel) library(gganimate) library(zoo) 4.2 Chronologie globale de la traite 4.2.1 Bornes chronologiques et durée de la traite Vous pouvez obtenir des résumés des données par des instructions en base R ou par la fonction summarise du package dplyr. R base retourne les résultats sous la forme de valeurs contrairement à dplyr qui les retourne sous la forme d’un objet de type data.frame. Première mention d’une expédition (Base R) min(voyages$yearam) ## [1] 1514 Ultime mention d’une expédition (Base R) max(voyages$yearam) ## [1] 1866 Durée (étendue) (Base R) max(voyages$yearam)-min(voyages$yearam) ## [1] 352 Package dplyr (package dplyr) voyages %&gt;% summarise(date_max=max(yearam), date_min=min(yearam)) ## # A tibble: 1 x 2 ## date_max date_min ## &lt;dbl&gt; &lt;dbl&gt; ## 1 1866 1514 4.2.2 Expéditions de traite 4.2.2.1 Tableau d’effectifs Il s’agit de compter, pour chacune des valeurs de la variable yearam, le nombre d’observations ayant cette valeur. Ce « nombre de fois » s’appelle l’effectif. La construction d’un tableau d’effectifs appartient à la catégorie des opérations groupées dans Dplyr et s’effectue par le biais de la fonction count. La colonne d’effectifs est automatiquement appelée n. voyages %&gt;% count(yearam) ## # A tibble: 335 x 2 ## yearam n ## &lt;dbl&gt; &lt;int&gt; ## 1 1514 1 ## 2 1516 1 ## 3 1520 1 ## 4 1525 1 ## 5 1526 5 ## 6 1527 1 ## 7 1532 5 ## 8 1533 1 ## 9 1534 2 ## 10 1535 2 ## # ... with 325 more rows 4.2.2.2 Nombre moyen d’expéditions par années voyages %&gt;% count(yearam) %&gt;% summarise(moyenne=mean(n)) ## # A tibble: 1 x 1 ## moyenne ## &lt;dbl&gt; ## 1 107. 4.2.2.3 Dix années comportant le plus grand nombre d’expéditions voyages %&gt;% count(yearam) %&gt;% top_n(10) ## Selecting by n ## # A tibble: 11 x 2 ## yearam n ## &lt;dbl&gt; &lt;int&gt; ## 1 1765 339 ## 2 1766 354 ## 3 1767 332 ## 4 1770 332 ## 5 1774 359 ## 6 1790 345 ## 7 1791 347 ## 8 1792 360 ## 9 1805 351 ## 10 1806 371 ## 11 1807 395 4.2.2.4 Prise en considération des années pour lesquelles des mentions d’expéditions de traite sont absentes. 4.2.2.4.1 Tableau chronologique des expéditions de traite n_exped &lt;- voyages %&gt;% count(yearam) 4.2.2.4.2 Tableau chronologique “vide” On construit un vecteur de nombres entiers appelé chronoallant de 1514 à 1866. Ce vecteur est converti en tableau de données par la fonction data.frame. chrono &lt;- data.frame (yearam = c(1514:1866)) 4.2.2.4.3 Mise en relation des tables “n_exped” et “chrono” full_n_exped &lt;- left_join(chrono, n_exped) ## Joining, by = &quot;yearam&quot; Cette combinaison des données de plusieurs tables est appelée jointure gauche.Elle conserve toutes les observations de la table chrono, même en l’absence de correspondances dans la table n_exped (et toutes les les colonnes des deux tables). Les lignes de chronosans correspondance, c’est à dire pour lesquelles il n’existe pas d’expéditions de traite, prendront comme valeurs nadans la colonne n des effectifs. S’il existe une correspondances, les effectifs d’expéditions seront reportés. L’ordre des arguments de la fonction left_join a son importance. Comme on souhaite conserver la totalité des lignes de la table de gauche, cette dernière doit constituer le premier argument de la fonction, autrement-dit, celui situé à gauche. 4.2.2.4.4 Visualisation head(full_n_exped, 20) ## yearam n ## 1 1514 1 ## 2 1515 NA ## 3 1516 1 ## 4 1517 NA ## 5 1518 NA ## 6 1519 NA ## 7 1520 1 ## 8 1521 NA ## 9 1522 NA ## 10 1523 NA ## 11 1524 NA ## 12 1525 1 ## 13 1526 5 ## 14 1527 1 ## 15 1528 NA ## 16 1529 NA ## 17 1530 NA ## 18 1531 NA ## 19 1532 5 ## 20 1533 1 4.2.3 Esclaves embarqués par années ⚠️ Le résultat d’un calcul portant sur des termes incluant des valeurs manquantes est une valeur manquante. Vous pouvez calculer le nombre total d’esclaves embarqués par années à condition de prendre soin d’omettre les valeurs manquantes des termes du calcul. Une rapide vérification par l’instruction ci-dessous révèle la présence de valeurs manquantes au sein de la variable slaximp. NA %in% voyages$slaximp ## [1] TRUE Prenons par exemple l’année 1653 qui comprend 10 expéditions pour lesquelles le nombre d’esclaves embarqués est partiellement connu. voyages %&gt;% filter (yearam == 1653) %&gt;% select(shipname, yearam, slaximp) ## # A tibble: 10 x 3 ## shipname yearam slaximp ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Gele Zon (a) Sol 1653 340 ## 2 Gele Engel (a) Engel Gabriel 1653 380 ## 3 NS del Buen Sucesso y El Santo Cristo 1653 325 ## 4 NS del Rosario y S Antonio 1653 325 ## 5 S Maria 1653 NA ## 6 NS da Conceição e Penha da França 1653 381 ## 7 Luipaard 1653 273 ## 8 Fortuijn 1653 334 ## 9 Blinde Fortuin 1653 273 ## 10 &lt;NA&gt; 1653 406 Le résultat de l’addition du nombre d’esclaves embarqués par expédition pour l’année 1653 confirme que la présence de valeurs absentes parmi les termes d’une opération calculatoire retourne comme résultat NA. voyages %&gt;% filter (yearam == 1653) %&gt;% select(shipname, yearam, slaximp) %&gt;% summarise (n_esc = sum(slaximp)) ## # A tibble: 1 x 1 ## n_esc ## &lt;dbl&gt; ## 1 NA Vous devez donc exclure les valeurs manquantes préalablement au calcul à effectuer. Deux syntaxes sont possibles. # Syntaxe 1 voyages %&gt;% filter (!is.na(slaximp)) %&gt;% filter (yearam &gt;= 1653) %&gt;% group_by (yearam) %&gt;% summarise (n_esc = sum(slaximp)) # Syntaxe 2 voyages %&gt;% filter (complete.cases(slaximp)) %&gt;% filter (yearam &gt;= 1653) %&gt;% group_by (yearam) %&gt;% summarise (n_esc = sum(slaximp)) ## # A tibble: 214 x 2 ## yearam n_esc ## &lt;dbl&gt; &lt;dbl&gt; ## 1 1653 3037 ## 2 1654 5488 ## 3 1655 4270 ## 4 1656 5675 ## 5 1657 4596 ## 6 1658 7037 ## 7 1659 8184 ## 8 1660 5549 ## 9 1661 5157 ## 10 1662 5290 ## # ... with 204 more rows 4.2.4 Différentes façons de mesurer une variation 4.2.4.1 Définitions On considère une quantité passant de la valeur initiale \\(V1\\) à la valeur finale \\(V2\\). Variation absolue La variation absolue est la quantité \\(V2–V1\\). Le pourcentage d’évolution ou taux d’évolution Le taux d’évolution est la variation relative exprimée en pourcentage. Ainsi on a : \\(t\\%=\\frac{V2-V1}{V1}\\times100\\) A retenir : la variation globale ne correspond pas à la somme de variations successives. 4.2.4.2 Le coefficient multiplicateur Le coefficient multiplicateur est le nombre par lequel il faut multiplier \\(V1\\) pour obtenir \\(V2\\). On le note souvent \\(CM\\). On a donc : \\(V2=CM\\times{V1}\\) ou encore \\(CM=\\frac{V2}{V1}\\) 4.2.4.3 Coefficient multiplicateur ou taux d’évolution ? Lorsque la donnée à comparer est supérieure au double de l’autre on choisit généralement le coefficient multiplicateur. Lorsque la donnée à comparer est inférieure au double de l’autre on choisit généralement le Taux de variation. 4.2.4.3.1 Mise en pratique : évolutions par décennies Le nombre d’expéditions est calculé par décennies par count(year10). De nouvelles colonnes sont ajoutées au tableau d’effectifs par la fonction mutate. L’utilisateur en choisi le nom en veillant à respecter les conventions de r (noms en minuscules). Pour mesurer une évolution entre deux valeurs, on utilise la fonction lag qui permet de faire référence à la valeur précédente. evolution &lt;- voyages %&gt;% count(year10) %&gt;% mutate (variation_absolue = n-lag(n)) %&gt;% mutate (taux_evolution = paste(round((n-lag(n))/lag(n)*100), &quot;%&quot;)) %&gt;% mutate (coeff_multiplicateur = round(n/lag(n),1)) 4.2.5 Représentations graphiques 4.2.5.1 Représentation graphique en base R Vous pouvez “piper” la fonction plot après avoir compté le nombre d’observations par années. Le résultat obtenu est un graphique de type “nuage de points”. voyages %&gt;% count(yearam) %&gt;% plot() Vous pouvez personnaliser le graphique par une géométrie de type marche d’escalier (t=\"s\") ou une courbe (t=\"l\") et le compléter par un habillage dont la taille des caractères est réglée par la fonction cex. voyages %&gt;% count(yearam) %&gt;% plot(t=&quot;s&quot;, main=&quot;Chronologie des expéditions de traite atlantique&quot;, sub=&quot;Voyages, The TransAtlantic Salve Trade Db&quot;, xlab=&quot;années&quot;, ylab=&quot;expéditions&quot;, cex.lab=0.80, cex.sub=0.75) 4.2.5.2 Représentations avancées (ggplot2) 4.2.5.2.1 Graphique en marche d’escalier Vous pouvez utiliser le package ggplot2 pour régler les intervalles des axes continus (fonction scale_x_continuous) et modifier l’apparence du graphique à l’aide d’un bibliothèque de thèmes ou en employant la fonction .theme pour des paramétrages manuels. n_exped &lt;- voyages %&gt;% count(yearam) gg_chrono1 &lt;- ggplot(n_exped, aes(x= yearam, y= n)) gg_chrono1 + geom_area (color=&quot;#d95f02&quot;, fill= alpha(&quot;#d95f02&quot;, 0.1)) + scale_x_continuous(breaks=seq(1500, 1875, by=25)) + geom_hline(yintercept=0, linetype=&quot;solid&quot;, color = &quot;grey&quot;) + labs(title = &quot;Chronologie des expéditions de traite atlantique&quot;, subtitle = &quot;Expéditions&quot;, caption =&quot;Source : The Trans-Atlantic Slave Trade Database (2019).Variable yearam \\n W. Cariou (2020)&quot;, x=&quot;&quot;, y=&quot;&quot;) + my_theme_chrono1() + scale_y_continuous(limits = c(-10,450), expand = c(0, 0)) 4.2.5.2.2 Dégager les principales variations Vous pouvez mettre en évidences les principaux pics (stat_peaks) et vallées (stat_valleys) par des symboles (argument shape) et les années correspondantes text_repel) en employant le package complémentaire à ggplot2, ggpmisc. Les arguments ignore_threshold et span permettant de sélectionner les variations les plus significatives. Le chevauchement des étiquettes est réglé par l’argument geom =\"text_repel\" en lien avec le package ggrepel. library(ggpmisc) library(ggrepel) n_exped_pics_vallees &lt;- voyages %&gt;% count(yearam) gg_chrono1 &lt;- ggplot(n_exped_pics_vallees , aes(x= yearam, y= n)) gg_chrono1 + geom_area (color=&quot;#d95f02&quot;, fill= alpha(&quot;#d95f02&quot;, 0.1)) + scale_x_continuous(breaks=seq(1500, 1875, by = 25)) + stat_peaks(ignore_threshold = 0.4, colour = &quot;#d95f02&quot;, span =15, segment.colour = &quot;black&quot;, size = 3, shape = 2) + stat_peaks(ignore_threshold = 0.4, colour = &quot;#d95f02&quot;, span =15, geom =&quot;text_repel&quot;, size = 3, fontface=&quot;bold&quot;) + stat_valleys(ignore_threshold = - 0.1, colour = &quot;#1b9e77&quot;, span = 15, size = 3, shape=6) + stat_valleys(ignore_threshold = - 0.1, colour = &quot;#1b9e77&quot;, span = 15, geom =&quot;text_repel&quot;, size = 3, fontface=&quot;bold&quot;) + labs(title = &quot;Chronologie des expéditions de traite atlantique&quot;, subtitle = &quot;Expéditions&quot;, caption =&quot;Source : The Trans-Atlantic Slave Trade Database (2019).Variable yearam \\n W. Cariou (2020)&quot;, x=&quot;&quot;, y=&quot;&quot;) + my_theme_chrono1() + scale_y_continuous(limits = c(-10,450), expand = c(0, 0)) + geom_hline(yintercept=0, linetype=&quot;solid&quot;, color = &quot;grey&quot;) 4.2.5.2.3 Dégager une tendance par lissage par moyenne mobile n_exped &lt;- voyages %&gt;% count(yearam) gg_chrono1 &lt;- ggplot(n_exped, aes(x= yearam, y= n)) gg_chrono1 + geom_area (color=&quot;#d95f02&quot;, fill= alpha(&quot;#d95f02&quot;, 0.1)) + geom_line(aes(y=rollmean(n, 25, na.pad=TRUE)), color=&quot;#1b9e77&quot;, size=1) + geom_area(aes(y=rollmean(n, 25, na.pad=TRUE)), fill=&quot;#1b9e77&quot;, size=1, alpha=.25) + scale_x_continuous(breaks=seq(1500, 1875, by=25)) + labs(title = &quot;Chronologie des expéditions de traite atlantique&quot;, subtitle = &quot;Expéditions, moyenne mobile centrée fenêtre de 25 ans&quot;, caption =&quot;Source : The Trans-Atlantic Slave Trade Database (2019).Variable yearam \\n W. Cariou (2020)&quot;, x=&quot;&quot;, y=&quot;&quot;) + my_theme_chrono1() + scale_y_continuous(limits = c(-10,450), expand = c(0, 0)) + geom_hline(yintercept=0, linetype=&quot;solid&quot;, color = &quot;grey&quot;) ## Warning: Removed 24 rows containing missing values (position_stack). ## Warning: Removed 24 row(s) containing missing values (geom_path). 4.2.5.2.4 Tendance et variabilité par boîtes à moustaches Vous pouvez résumer la distribution des expéditions par années regroupées en périodes par des boîte et moustache. Ce graphique trace une boîte autour du premier et troisième quartile. La médiane est figurée par le trait à l’intérieur de la boite et des moustaches sont tracées au-dessus et au-dessous de la case pour résumer l’étendue générale des observations. La boite à moustaches est dite “élaguée” car les moustaches ne correspond pas aux valeurs minimales et maximales de la série statistique. Des points sont dessinés pour les valeurs aberrantes en dehors des moustaches. n_exped25 &lt;- voyages %&gt;% count(yearam, year25) %&gt;% mutate(year25 = sub(&quot;years&quot;, &quot;&quot;, year25)) gg_chrono1 &lt;- ggplot(n_exped25, aes(x= year25, y = n)) gg_chrono1 + geom_boxplot(colour = &quot;#1b9e77&quot;, outlier.colour = &quot;#d95f02&quot;, fill= alpha(&quot;#1b9e77&quot;, 0.3)) + labs(title = &quot;Chronologie des expéditions de traite atlantique par intervalles de 25 ans&quot;, subtitle = &quot;Distribution des expéditions par années pour chaque intervalle&quot;, caption =&quot;Source : The Trans-Atlantic Slave Trade Database (2019).Variable yearam \\n W. Cariou (2020)&quot;, x=&quot;&quot;, y=&quot;&quot;) + my_theme_chrono1() + geom_hline(yintercept=0, linetype=&quot;solid&quot;, color = &quot;grey&quot;) + scale_x_discrete(guide = guide_axis(n.dodge = 2)) 4.3 Chronologies comparatives de la traite 4.3.1 Chronologie des expéditions en fonction des pavillons de navires 4.3.1.1 Tableaux 4.3.1.1.1 Tableau long voyages %&gt;% count(yearam, natinimp) ## # A tibble: 1,386 x 3 ## yearam natinimp n ## &lt;dbl&gt; &lt;chr&gt; &lt;int&gt; ## 1 1514 Portugal / Brazil 1 ## 2 1516 Portugal / Brazil 1 ## 3 1520 &lt;NA&gt; 1 ## 4 1525 Portugal / Brazil 1 ## 5 1526 Portugal / Brazil 1 ## 6 1526 Spain / Uruguay 2 ## 7 1526 &lt;NA&gt; 2 ## 8 1527 Spain / Uruguay 1 ## 9 1532 Portugal / Brazil 3 ## 10 1532 Spain / Uruguay 1 ## # ... with 1,376 more rows 4.3.1.1.2 Tableau large (à double-entrées) La fonction pivot_wider du package tidyr(cf. tidyverse) vous permet de transformer des lignes en colonnes et ainsi passer d’un format de tableau long à un format large, où les nationalités deviennent des colonnes. names_from indique la colonne contenant les noms des nouvelles variables à créer et values_from indique la colonne contenant les valeurs de ces variables. voyages %&gt;% count(yearam, natinimp) %&gt;% pivot_wider(names_from = natinimp, values_from = n) ## # A tibble: 335 x 11 ## yearam `Portugal / Bra~ `NA` `Spain / Urugua~ `Great Britain` France ## &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; ## 1 1514 1 NA NA NA NA ## 2 1516 1 NA NA NA NA ## 3 1520 NA 1 NA NA NA ## 4 1525 1 NA NA NA NA ## 5 1526 1 2 2 NA NA ## 6 1527 NA NA 1 NA NA ## 7 1532 3 1 1 NA NA ## 8 1533 NA 1 NA NA NA ## 9 1534 2 NA NA NA NA ## 10 1535 2 NA NA NA NA ## # ... with 325 more rows, and 5 more variables: Netherlands &lt;int&gt;, `Denmark / ## # Baltic` &lt;int&gt;, USA &lt;int&gt;, Other &lt;int&gt;, Portugal &lt;int&gt; 4.3.1.2 Représentations graphiques 4.3.1.3 Représentations graphiques avancées (ggplot2) 4.3.1.3.1 Graphiques juxtaposés, échelle arithmétique La fonction facet du package ggplot2 partitionne un graphique en une matrice de panneaux en fonction de valeurs à l’instar d’un boucle. # Préparation des données flagsyears_a &lt;- voyages %&gt;% count(yearam, natinimp) %&gt;% filter(complete.cases(natinimp)) %&gt;% filter(!natinimp ==&quot;Other&quot;) # facet library(ggplot2) facet_flags &lt;- ggplot (flagsyears_a, aes(x=yearam, y=n)) + geom_step (color=&quot;#d95f02&quot;) + scale_x_continuous(breaks=seq(1500, 1875, by=50)) + labs(title = &quot;Chronologie des expéditions de traite atlantique&quot;, subtitle = &quot;Pavillons&quot;, caption =&quot;Source : The Trans-Atlantic Slave Trade Database (2019) variable yearam&quot;, x=&quot;&quot;, y=&quot;expéditions&quot;) + my_theme_chrono1() # Création des graphiques juxtaposés facet_flags + facet_wrap(natinimp ~ ., ncol = 2, scales=&quot;free_x&quot;) 4.3.1.3.2 Effectifs cumulés croissants, échelle logarithmique Un graphique logarithmique (ou plus précisément semi-logarithmique) est une représentation graphique d’une série statistique chronologique. Il est défini en abscisse par une échelle arithmétique du temps. Il est défini en ordonnée par une échelle logarithmique. L’utilisation de ce type de graphique n’impose pas de savoir calculer des logarithmes. Les graphiques à progression semi-logarithmique ne se lisent pas comme les graphiques à progression arithmétique. Ils permettent de comparer des rythmes d’évolution sans à avoir à effectuer des calculs. La pente donne le rythme d’évolution et non la quantité. Ils permettent également de représenter des séries statistiques de très forte amplitude dans lesquelles les valeurs se situent dans un intervalle trop grand pour permettre une bonne lisibilité de la courbe. Echelle logarithmique de base 10. On débute à 1 et non 0. Chaque fois que l’on parcours une distance, on multiple le nombre 1 par un 10 au lieu d’ajouter un nombre constant. Si on poursuit on multiple 10 par 10 ce qui fait 100. # Préparation des données flagsyears_ecc &lt;- voyages %&gt;% count(yearam, natinimp) %&gt;% group_by(natinimp) %&gt;% mutate(ecc = cumsum(n)) %&gt;% filter(complete.cases(natinimp)) %&gt;% filter(!natinimp ==&quot;Other&quot; &amp; !natinimp == &quot;Portugal&quot;) n_exped_last &lt;- flagsyears_ecc %&gt;% slice(which.max(yearam)) # library(ggplot2) log_flags &lt;- ggplot (flagsyears_ecc, aes(x=yearam, y=ecc, color=natinimp)) + geom_line() + geom_point(data = n_exped_last, aes(x = yearam, y = ecc , group=natinimp), shape = 21, fill = &quot;white&quot;, size = 1.8, stroke = 1.2) + scale_y_log10() + labs(title = &quot;Chronologie des expéditions de traite atlantique&quot;, subtitle = &quot;Pavillons&quot;, caption =&quot;Source : The Trans-Atlantic Slave Trade Database (2019) variable yearam&quot;, x=&quot;&quot;, y=&quot;expéditions&quot;) + my_theme_chrono1() + geom_hline(yintercept=0, linetype=&quot;solid&quot;, color = &quot;grey&quot;) + scale_colour_brewer(palette = &quot;Dark2&quot;) log_flags 4.3.1.4 Chronologie comparative des expéditions de traite en fonction des ports de départs 4.3.1.4.1 Evolution des ports entre 1774 et 1779 La période 1774-1779 connaît une chute brutale de la traite. Les instructions ci dessous visent à décrire l’évolution des expéditions en fonction des ports. evolution_ports_1774_79 &lt;- voyages %&gt;% filter(yeardep &gt;= 1774 &amp; yeardep &lt;= 1779) %&gt;% count(ptdepimp, yeardep) %&gt;% pivot_wider(names_from = yeardep, values_from = n, names_prefix = &quot;annee_&quot;) evolution_ports_1774_79 ## # A tibble: 47 x 7 ## ptdepimp annee_1774 annee_1775 annee_1776 annee_1777 annee_1778 annee_1779 ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; ## 1 Amsterdam 1 1 1 NA NA NA ## 2 Antigua, p~ NA 1 NA NA NA NA ## 3 Bahia, por~ 22 24 21 19 29 29 ## 4 Barbados, ~ NA NA 1 NA NA NA ## 5 Bordeaux 13 10 10 3 2 NA ## 6 Boston 7 NA NA NA NA NA ## 7 Bristol 20 20 8 2 2 NA ## 8 British Ca~ NA NA 3 NA 1 NA ## 9 Charleston 2 NA NA NA NA NA ## 10 Chester NA 1 NA NA NA NA ## # ... with 37 more rows 4.3.1.4.2 Représentation graphique brute ports_depart_chrono &lt;- voyages %&gt;% count(yearam, ptdepimp) %&gt;% filter(complete.cases(ptdepimp)) library(ggplot2) # Création d&#39;un graphique en bâtons plot_ports_depart_chrono &lt;- ggplot(ports_depart_chrono, aes(x=yearam, y=n, group=ptdepimp)) + geom_line() plot_ports_depart_chrono 4.3.1.4.3 Représentation graphique partitionnée des neuf principaux ports (effectifs) Le graphique brut est illisible. Vous pouvez envisagez un représentation graphique alternative en mettant en évidence les ports les plus actifs en combinant la fonction gghighlight (package gghighlight) et la fonction facet_wrap (package ggplot2). Lors de la préparation des données , vous devez créer deux tableaux de données et les réunir par une jointure. Le tableau ports_depart_chrono_total compte le total des expéditions par port pour en afficher le rang (nouvelle colonne rank, fonction dense_rank). Le tableau ports_depart_chrono_annees compte le nombre d’expéditions par port et part années. Le tableau final ports_chrono_rank combine les 2 tableaux. Il vous reste à mettre en évidence dans ggplot2 les courbes des principaux ports en se basant sur les valeurs de la colonne rank. ports_depart_chrono_total &lt;- voyages %&gt;% count(ptdepimp) %&gt;% mutate(rank = dense_rank(desc(n))) ports_depart_chrono_annees &lt;- voyages %&gt;% count(yearam, ptdepimp) %&gt;% filter(complete.cases(ptdepimp)) ports_chrono_rank &lt;- left_join(ports_depart_chrono_annees, ports_depart_chrono_total, by = c(&quot;ptdepimp&quot; = &quot;ptdepimp&quot;)) ports_chrono_rank &lt;- ports_chrono_rank %&gt;% rename(n =n.x ) %&gt;% select(-n.y) library(ggplot2) library(gghighlight) plot_ports_depart_chrono2 &lt;- ggplot(ports_chrono_rank, aes(x=yearam, y=n, group=ptdepimp)) + geom_step(aes(x=yearam, y=n, group=ptdepimp) , color=&quot;#d95f02&quot; , show.legend=FALSE, size = 0.5) + gghighlight(max(rank) &lt; 11, use_direct_label = FALSE, unhighlighted_params = list(size = 0.25, colour = alpha(&quot;grey85&quot;, 0.4))) + scale_x_continuous(breaks=seq(1500, 1875, by=100)) + labs(title = &quot;Chronologie des expéditions de traite atlantique&quot;, subtitle = &quot;Principaux ports de départ&quot;, caption =&quot;Source : The Trans-Atlantic Slave Trade Database (2019) variable yearam&quot;, x = &quot;&quot;, y =&quot;expéditions&quot;) + my_theme_chrono1() + facet_wrap(~ ptdepimp, scales=&quot;free_x&quot;) plot_ports_depart_chrono2 4.3.1.4.4 Représentation graphique partitionnée des neuf principaux ports (effectifs cumulés croissants) ports_depart_chrono_total &lt;- voyages %&gt;% count(ptdepimp) %&gt;% mutate(rank = dense_rank(desc(n))) ports_depart_chrono_annees &lt;- voyages %&gt;% count(yearam, ptdepimp) %&gt;% filter(complete.cases(ptdepimp)) ports_chrono_rank &lt;- left_join(ports_depart_chrono_annees, ports_depart_chrono_total, by = c(&quot;ptdepimp&quot; = &quot;ptdepimp&quot;)) ports_chrono_rank_ecc &lt;- ports_chrono_rank %&gt;% rename(n =n.x ) %&gt;% select(-n.y) %&gt;% group_by(ptdepimp) %&gt;% mutate(ecc = cumsum(n)) %&gt;% ungroup() %&gt;% arrange(ptdepimp, yearam) library(ggplot2) library(gghighlight) plot_ports_depart_chrono_ecc &lt;- ggplot(ports_chrono_rank_ecc, aes(x=yearam, y=ecc, group=ptdepimp)) + geom_step(aes(x=yearam, y=ecc, group=ptdepimp), color=&quot;#d95f02&quot; , show.legend=FALSE, size = 0.5) + gghighlight(max(rank) &lt; 11, use_direct_label = FALSE, unhighlighted_params = list(size = 0.25, colour = alpha(&quot;grey85&quot;, 0.4))) + scale_x_continuous(breaks=seq(1500, 1875, by=100)) + labs(title = &quot;Chronologie des expéditions de traite atlantique&quot;, subtitle =&quot;Principaux ports de départ, effectifs cumulés croissants&quot;, caption =&quot;Source : The Trans-Atlantic Slave Trade Database (2019) variable yearam&quot;, x = &quot;&quot;, y =&quot;expéd.&quot;) + my_theme_chrono1() + facet_wrap(~ ptdepimp, scales=&quot;free_x&quot;) plot_ports_depart_chrono_ecc 4.3.2 Chronologie d’arrivée des navires, principaux lieux d’achat d’esclaves lieux_achats &lt;- voyages %&gt;% select(mjbyptimp, datebuy) %&gt;% arrange(datebuy) %&gt;% filter(complete.cases(datebuy)) gg_chrono2 &lt;- ggplot(lieux_achats, aes(x= datebuy, y= mjbyptimp)) gg_chrono2 + geom_point (color=&quot;#d95f02&quot;, alpha =0.3, size = 1.5, position = position_jitter(width = 0, height = 0.25)) + scale_x_date(date_breaks = &quot;10 year&quot;, date_minor_breaks = &quot;5 year&quot;, date_labels = &quot;%Y&quot;) + labs(title = &quot;Principaux lieux d&#39;achat d&#39;esclaves&quot;,subtitle = &quot;&quot;, caption =&quot;Source : The Trans-Atlantic Slave Trade Database (2019) variables mjbyptimp et datebuy&quot;, x=&quot;&quot;, y=&quot;&quot;) + theme_minimal() 4.4 Exemples 4.4.1 Chronologie des expéditions de traite à destination de Saint-Domingue 4.4.1.1 Tableau d’effectifs Vous devez filtrer les expéditions en vous fondant sur la variable mjselimp (Imputed principal region of slave disembarkation) puis compter le nombre d’expéditions par années d’arrivée en Amérique (variable yearam) avec la fonction count. stdoming1 &lt;- voyages %&gt;% filter(mjselimp ==&quot;Saint-Domingue&quot;) %&gt;% count(yearam) print(stdoming1) ## # A tibble: 96 x 2 ## yearam n ## &lt;dbl&gt; &lt;int&gt; ## 1 1679 2 ## 2 1684 1 ## 3 1685 4 ## 4 1686 3 ## 5 1687 1 ## 6 1693 1 ## 7 1699 2 ## 8 1701 2 ## 9 1708 1 ## 10 1709 1 ## # ... with 86 more rows 4.4.1.2 Représentation graphique Le diagramme en ligne est conçu avec la fonction plot en base R. Elle prend, comme premier argument le tableau de données à visualiser et, comme second argument le type de représentation (ici lpour line). Les arguments qui suivent permettent d’habiller le graphique. plot(stdoming1, type=&quot;l&quot;, main=&quot;Chronologie des expéditions de traite atlantique à destination de Saint Domingue&quot;, sub=&quot;Voyages, The TransAtlantic Salve Trade Db (2019)&quot;, xlab=&quot;années&quot;, ylab=&quot;expéditions&quot;, cex.main=0.9, cex.sub=0.7, cex.lab=0.75) 4.4.2 Nombre d’esclaves embarqués par années à destination de Saint-Domingue 4.4.2.1 Tableau Excluez en premier les expéditions dont le nombre d’esclaves embarqués (variable slaximp ) est inconnu par l’utilisation conjointe des fonctions filteret complete.cases. Regroupez ensuite les années d’arrivée en Amérique en appliquant la fonction group_by à la variable yearam afin de pouvoir résumer les données (summarise) par la somme (sum) des esclaves embarqués. stdoming2 &lt;- voyages %&gt;% filter(mjselimp ==&quot;Saint-Domingue&quot;) %&gt;% filter(complete.cases(slaximp)) %&gt;% group_by(yearam) %&gt;% summarise(n_esc = sum(slaximp)) print(stdoming2) ## # A tibble: 96 x 2 ## yearam n_esc ## &lt;dbl&gt; &lt;dbl&gt; ## 1 1679 436 ## 2 1684 380 ## 3 1685 1092 ## 4 1686 504 ## 5 1687 316 ## 6 1693 524 ## 7 1699 781 ## 8 1701 607 ## 9 1708 316 ## 10 1709 592 ## # ... with 86 more rows 4.4.2.2 Représentation graphique plot(stdoming2, type=&quot;l&quot;, main=&quot;Chronologie du nombre d&#39;esclaves embarqués à destination de Saint Domingue&quot;, sub=&quot;Voyages, The TransAtlantic Salve Trade Db (2019)&quot;, xlab=&quot;années&quot;, ylab=&quot;expéditions&quot;, cex.main=0.9, cex.sub=0.7, cex.lab=0.75) 4.4.3 Chronologie décennale des expéditions de traite à destination de Saint-Domingue selon les ports de départ Filtrez les expéditions en vous fondant sur la variable mjselimp (Imputed principal region of slave disembarkation) puis compter le nombre d’expéditions par ports de départs (ptdepimp) et par décennies (variable year10) avec la fonction count. stdoming_y10A &lt;- voyages %&gt;% filter(mjselimp ==&quot;Saint-Domingue&quot;) %&gt;% count(year10, ptdepimp) print(stdoming_y10A ) ## # A tibble: 134 x 3 ## year10 ptdepimp n ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 years 1671-1680 France, port unspecified 1 ## 2 years 1671-1680 Saint-Malo 1 ## 3 years 1681-90 Bordeaux 1 ## 4 years 1681-90 Dunkerque 1 ## 5 years 1681-90 Honfleur 1 ## 6 years 1681-90 La Rochelle 2 ## 7 years 1681-90 Le Havre 3 ## 8 years 1681-90 Saint-Malo 1 ## 9 years 1691-1700 Saint-Malo 1 ## 10 years 1691-1700 &lt;NA&gt; 2 ## # ... with 124 more rows 4.4.3.0.1 Diagramme en barres empilées Un diagramme à barres empilées permet de visualiser le nombre total des expéditions à destination de Saint-Domingue par décennies et ports de départ des navires. voyages %&gt;% filter(mjselimp ==&quot;Saint-Domingue&quot;) %&gt;% distinct(ptdepimp) ## # A tibble: 38 x 1 ## ptdepimp ## &lt;chr&gt; ## 1 &lt;NA&gt; ## 2 Nantes ## 3 Vlissingen ## 4 Hellevoetsluis ## 5 Bristol ## 6 St. Kitts, port unspecified ## 7 Boston ## 8 St. Thomas ## 9 Bayonne ## 10 Bordeaux ## # ... with 28 more rows 38 ports ont pratiqué la traite à destination de Saint-Domingue. Afin d’envisager un diagramme en barres empilées lisible vous devez regrouper les ports dont l’activité est la moins importante sous le dénominatif “autres”. Pour ce faire, les fonctions mutate et replace sont utilisées pour recoder les noms de ports en fonction d’une condition. Ainsi, tous les ports dont le nombre d’expéditions est inférieur à 50 par décennies n &lt; 50 sont renommés en Autres (exped. &lt; 20) permettant de passer de 38 à 5 valeurs différentes. Enfin le texte years préfixant les décennies est supprimé ou plus exactement remplacé par une chaîne de caractères vide (fonction subassociée à mutate). library(dplyr) stdoming_y10B &lt;- voyages %&gt;% filter(mjselimp ==&quot;Saint-Domingue&quot;) %&gt;% count(year10, ptdepimp) %&gt;% mutate(ptdepimp = replace(ptdepimp, n &lt; 50, &quot;Autres (exped. &lt; 50)&quot;)) %&gt;% mutate(year10 = sub(&quot;years&quot;, &quot;&quot;, year10)) stdoming_y10B ## # A tibble: 134 x 3 ## year10 ptdepimp n ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 &quot; 1671-1680&quot; Autres (exped. &lt; 50) 1 ## 2 &quot; 1671-1680&quot; Autres (exped. &lt; 50) 1 ## 3 &quot; 1681-90&quot; Autres (exped. &lt; 50) 1 ## 4 &quot; 1681-90&quot; Autres (exped. &lt; 50) 1 ## 5 &quot; 1681-90&quot; Autres (exped. &lt; 50) 1 ## 6 &quot; 1681-90&quot; Autres (exped. &lt; 50) 2 ## 7 &quot; 1681-90&quot; Autres (exped. &lt; 50) 3 ## 8 &quot; 1681-90&quot; Autres (exped. &lt; 50) 1 ## 9 &quot; 1691-1700&quot; Autres (exped. &lt; 50) 1 ## 10 &quot; 1691-1700&quot; Autres (exped. &lt; 50) 2 ## # ... with 124 more rows Le diagramme empilé est réalisé avec le package ggplot2 ggplot(data = stdoming_y10B, aes(y = n, x = year10, fill = ptdepimp)) + geom_bar(stat=&quot;identity&quot;, width = 0.5) + scale_fill_brewer(palette = &quot;Dark2&quot;) + labs(title = &quot;Chronologie des expéditions de traite à destination de Saint-Domingue&quot;, subtitle =&quot;Principaux ports de départ&quot;, caption =&quot;Source : The Trans-Atlantic Slave Trade Database (2019) variables year10 et slaximp \\n W. Cariou (2020)&quot;, x = &quot;&quot;, y =&quot;&quot;, fill = &quot;Ports de départ&quot;) + my_theme_chrono1() + theme(axis.text.x = element_text(angle = 90, vjust= 0.2, hjust = 1)) "]
]
